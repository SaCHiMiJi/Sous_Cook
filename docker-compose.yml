version: '3.9'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./client:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    environment:
      - NODE_ENV=production
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./client/.env
    networks:
      - webnet

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - '5050:5050'
    volumes:
      - ./server:/app
      - /app/node_modules
    env_file:
      - ./server/.env
    networks:
      - webnet
    command: ["npx", "nodemon", "index.js"]

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - client
      - server
    networks:
      - webnet

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done;'"
    networks:
      - webnet

networks:
  webnet:
